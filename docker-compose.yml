version: '3.8'

services:
  api_gateway:
    build:
      context: ./APIGateWay
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - orderservice
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=harddb;Username=gorbiga;Password=12345679
    volumes:
      - ./APIGateWay/ocelot.json:/app/ocelot.json
    networks:
      - order-network

  orderservice:
    build:
      context: ./OrderServiceApp
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=harddb;Username=gorbiga;Password=12345679
    networks:
      - order-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: harddb
      POSTGRES_USER: gorbiga
      POSTGRES_PASSWORD: 12345679
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - order-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - order-network

volumes:
  postgres_data:

networks:
  order-network:
    driver: bridge